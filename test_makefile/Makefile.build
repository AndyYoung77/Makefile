PHONY := __build
__build:

obj-y :=
subdir-y :=

include Makefile


# obj-y := a.o b.o c/ d/  $(filter %/, $(obj-y)): c/ d/  __subdir-y:  c d
__subdir-y := $(patsubst %/,%,$(filter %/, $(obj-y)))
subdir-y += $(__subdir-y)

#c/built-in.o  d/built-in.o
subdir_objs := $(foreach f, $(subdir-y), $(f)/built-in.o)


#a.o b.o 
cur_objs := $(filter-out %/, $(obj-y))
dep_files := $(foreach f, $(cur_objs),.$(f).d)
dep_files := $(wildcard $(dep_files))

#include .a.o.d .b.o.d
ifneq ($(dep_files), )
	include $(dep_files)
endif

PHONY += $(subdir-y)

__build : $(subdir-y) built-in.o

$(subdir-y):
	$(warning $(subdir-y))
	make -C $@ -f $(TOPDIR)/Makefile.build
	
built-in.o : $(cur_objs) $(subdir_objs)
	$(warning $(subdir-y))
	$(LD) -r -o $@ $^
	
dep_file = .$@.d

%.o : %.c
	$(warning $(subdir-y))
	$(CC) $(CFLAGS) -Wp,-MD,$(dep_file) -c -o $@ $<
	
.PHONY : $(PHONY)